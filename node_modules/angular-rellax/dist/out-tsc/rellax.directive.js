var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Directive, ElementRef, Input } from '@angular/core';
import * as Rellax from 'rellax';
var RellaxDirective = (function () {
    function RellaxDirective(el) {
        this.el = el;
        this.center = this.center ? this.center : false;
        this.speed = this.speed ? this.speed : -2;
        this.rellax = new Rellax(this.el.nativeElement, {
            center: this.center,
            speed: this.speed
        });
    }
    return RellaxDirective;
}());
__decorate([
    Input(),
    __metadata("design:type", Number)
], RellaxDirective.prototype, "speed", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], RellaxDirective.prototype, "center", void 0);
RellaxDirective = __decorate([
    Directive({
        selector: '[rellax]'
    }),
    __metadata("design:paramtypes", [ElementRef])
], RellaxDirective);
export { RellaxDirective };
//# sourceMappingURL=/Users/wilsonhobbs/angular-rellax/src/rellax.directive.js.map